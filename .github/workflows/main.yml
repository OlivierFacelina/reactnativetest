name: Build React Native App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# DÃ©claration des variables d'environnement globales
env:
  APP_NAME: "reactnativetest"

permissions:
  actions: write
  
jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          npm install
          cd android && ./gradlew clean

      - name: Build APK
        run: |
          cd android && ./gradlew assembleRelease 
          mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/${{ env.APP_NAME }}.apk
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}

      - name: Delete previous build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              });

              for (const artifact of artifacts.data) {
                console.log(artifact.name)
                if (artifact.name.startsWith('android-release-apk')) {
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                  });
                  console.log(`Deleted artifact: ${artifact.name}`);
                }
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }
    
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-release-apk-${{ github.run_number }}
          path: android/app/build/outputs/apk/release/${{ env.APP_NAME }}.apk

  build-ios:
    name: Build iOS
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: npm install

      - name: Install CocoaPods
        run: |
          cd ios
          bundle install --retry 3 --jobs 4
          bundle exec pod install

      - name: Clean Xcode build
        run: |
          xcodebuild -workspace ios/${{ env.APP_NAME }}.xcworkspace -scheme ${{ env.APP_NAME }} -configuration Release -sdk iphoneos clean

      - name: Build iOS app
        run: |
          cd ios
          xcodebuild -workspace ${{ env.APP_NAME }}.xcworkspace -scheme ${{ env.APP_NAME }} -configuration Release -sdk iphoneos \
            -archivePath build/${{ env.APP_NAME }}.xcarchive archive \
            CODE_SIGN_IDENTITY="${{ secrets.IOS_CODE_SIGN_IDENTITY }}" \
            PROVISIONING_PROFILE="${{ secrets.IOS_PROVISIONING_PROFILE }}"
        env:
          DEVELOPER_CERTIFICATE: ${{ secrets.IOS_DEVELOPER_CERTIFICATE }}
          CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}

      - name: Delete previous build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              });

              for (const artifact of artifacts.data) {
                if (artifact.name.startsWith('ios-build-')) {
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                  });
                  console.log(`Deleted artifact: ${artifact.name}`);
                }
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }

      - name: Upload iOS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-build-${{ github.run_number }}
          path: ios/build
  
      - name: Create ExportOptions.plist
        run: |
          cd ios
          echo "$EXPORT_OPTIONS_PLIST_CONTENT" > ExportOptions.plist
        env:
          EXPORT_OPTIONS_PLIST_CONTENT: |
            <?xml version="1.0" encoding="UTF-8"?>
            <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
            <plist version="1.0">
            <dict>
                <key>method</key>
                <string>ad-hoc</string>
                <key>provisioningProfiles</key>
                <dict>
                    <key>$(PRODUCT_BUNDLE_IDENTIFIER)</key>
                    <string>${{ secrets.IOS_PROVISIONING_PROFILE_NAME }}</string>
                </dict>
                <key>signingCertificate</key>
                <string>${{ secrets.IOS_CODE_SIGN_IDENTITY }}</string>
                <key>signingStyle</key>
                <string>manual</string>
                <key>stripSwiftSymbols</key>
                <true/>
                <key>teamID</key>
                <string>${{ secrets.IOS_TEAM_ID }}</string>
            </dict>
            </plist>
  
      - name: Export IPA from archive
        run: |
            cd ios
            xcodebuild -exportArchive -archivePath build/${{ env.APP_NAME }}.xcarchive -exportPath build/ipa \
              -exportOptionsPlist ExportOptions.plist  

      - name: Delete previous IPA artifacts
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: context.runId,
              });

              for (const artifact of artifacts.data) {
                if (artifact.name.startsWith('ios-release-ipa')) {
                  await github.rest.actions.deleteArtifact({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    artifact_id: artifact.id,
                  });
                  console.log(`Deleted artifact: ${artifact.name}`);
                }
              }
            } catch (error) {
              console.error("Error deleting artifacts:", error);
            }
      
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-ipa-${{ github.run_number }}
          path: ios/build/ipa/${{ env.APP_NAME }}.ipa

